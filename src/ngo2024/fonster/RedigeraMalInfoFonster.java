/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024.fonster;

import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.HashMap;
import javax.swing.*;
import javax.swing.text.*;
import java.awt.*;
import ngo2024.Anvandare;
/**
 *
 * @author leowa
 */
public class RedigeraMalInfoFonster extends javax.swing.JFrame {
    
    private InfDB idb;
    private int malNr;
    private Anvandare inloggadAnvandare;
    private boolean osparadeAndringar;
    
    /**
     * Creates new form MalInfo
     */
    
    public RedigeraMalInfoFonster(InfDB idb, int malNr, Anvandare inloggadAnvandare) {
        this.idb = idb;
        this.malNr = malNr;
        this.inloggadAnvandare = inloggadAnvandare;
        initComponents();
        setLocationRelativeTo(null);
        setMal();
        lblFelM.setVisible(false);
        btnSpara.setEnabled(false);
        btnAterstall.setEnabled(false);
        osparadeAndringar = false;
    }
      
    //Metod för att sätta ikon och information om det specifika målet.
    private void setMal(){
        String[] sokVag = {
            "/resources/goals_icons/01-ingen-fattigdom.png",
            "/resources/goals_icons/02-ingen-hunger.png",
            "/resources/goals_icons/03-god-halsa-och-valbefinnande.png",
            "/resources/goals_icons/04-god-utbildning-for-alla-logo-1.png",
            "/resources/goals_icons/05-jamstalldhet.png",
            "/resources/goals_icons/06-rent-vatten-och-sanitet-for-alla.png",
            "/resources/goals_icons/07-hallbar-energi-for-alla.png",
            "/resources/goals_icons/08-anstandiga-arbetsvillkor-och-ekonomisk-tillvaxt.png",
            "/resources/goals_icons/09-hallbar-industri-innovationer-och-infrastruktur.png",
            "/resources/goals_icons/10-minskad-ojamnlikhet.png",
            "/resources/goals_icons/11-hallbara-stader-och-samhallen.png",
            "/resources/goals_icons/12-hallbar-konsumtion-och-produktion.png",
            "/resources/goals_icons/13-bekampa-klimatforandringarna.png",
            "/resources/goals_icons/14_hav_och_marina_resurser.png",
            "/resources/goals_icons/15_ekosystem.png",
            "/resources/goals_icons/Sustainable-Development-Goals_icons-16-1.png",
            "/resources/goals_icons/17_genomforande_och_partnerskap-logo.png"
        };
        
        String sqlFraga = "SELECT namn, beskrivning, prioritet FROM hallbarhetsmal " +
                "where hid = " + malNr;
        try{
            HashMap<String,String> dbMalInfo = idb.fetchRow(sqlFraga);
            
            String malNamn = dbMalInfo.get("namn");
            tpMalNamn.setText(malNamn);
            
            String malBeskrivning = dbMalInfo.get("beskrivning");
            tpMalBeskrivning.setText(malBeskrivning);

            String prioritet = dbMalInfo.get("prioritet");
            switch(prioritet){
                case "Hög":
                    cbPrio.setSelectedItem("Hög");
                    pbPrioritet.setValue(100);
                    pbPrioritet.setForeground(Color.RED);
                    break;
                case "Medel":
                    cbPrio.setSelectedItem("Medel");
                    pbPrioritet.setValue(75);
                    pbPrioritet.setForeground(Color.YELLOW);
                    break;
                case "Låg":
                    cbPrio.setSelectedItem("Låg");
                    pbPrioritet.setValue(25);
                    pbPrioritet.setForeground(Color.GREEN);
                    break;
            }
            this.setTitle("SDG Sweden - Redigera " + malNamn);
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }
        
        lblMalIkon.setIcon(new javax.swing.ImageIcon(getClass().getResource(sokVag[malNr-1])));
                
        }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMalIkon = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();
        lblBeskrivning = new javax.swing.JLabel();
        tpMalBeskrivning = new javax.swing.JTextPane();
        tpMalNamn = new javax.swing.JTextPane();
        lblPrioritet = new javax.swing.JLabel();
        pbPrioritet = new javax.swing.JProgressBar();
        btnSpara = new javax.swing.JButton();
        cbPrio = new javax.swing.JComboBox<>();
        lblFelM = new javax.swing.JLabel();
        btnAterstall = new javax.swing.JButton();

        setIconImage(new ImageIcon(getClass().getResource("/resources/icons/appLogo.png")).getImage());
        setResizable(false);

        lblMalIkon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/goals_icons/01-ingen-fattigdom.png"))); // NOI18N

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        lblBeskrivning.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblBeskrivning.setText("Beskrivning:");

        tpMalBeskrivning.setBorder(null);
        tpMalBeskrivning.setText("Målets beskrivning");
        tpMalBeskrivning.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpMalBeskrivningKeyTyped(evt);
            }
        });

        tpMalNamn.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        tpMalNamn.setText("Namn");
        tpMalNamn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpMalNamnKeyTyped(evt);
            }
        });

        lblPrioritet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPrioritet.setText("Prioritet:");

        pbPrioritet.setForeground(new java.awt.Color(204, 204, 204));
        pbPrioritet.setOpaque(true);

        btnSpara.setText("Spara");
        btnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaActionPerformed(evt);
            }
        });

        cbPrio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hög", "Medel", "Låg" }));
        cbPrio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbPrioItemStateChanged(evt);
            }
        });
        cbPrio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPrioActionPerformed(evt);
            }
        });

        lblFelM.setForeground(new java.awt.Color(255, 0, 51));
        lblFelM.setText("Alla fält måste vara ifyllda!");

        btnAterstall.setText("Återställ");
        btnAterstall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAterstallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTillbaka)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSpara)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAterstall))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMalIkon)
                        .addGap(18, 18, 18)
                        .addComponent(tpMalNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblBeskrivning)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pbPrioritet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblPrioritet)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbPrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblFelM))))
                        .addComponent(tpMalBeskrivning, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMalIkon)
                    .addComponent(tpMalNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(lblBeskrivning)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpMalBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrioritet)
                    .addComponent(cbPrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFelM))
                .addGap(10, 10, 10)
                .addComponent(pbPrioritet, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTillbaka)
                    .addComponent(btnSpara)
                    .addComponent(btnAterstall))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Om man har osparade änringar öppnas ett fönster som frågar om man vill fortsätta utan att spara
    //Annars stängs detta fönster ner och målinfo fönstret öppnas igen.
    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        if(osparadeAndringar){
            new OsparadeAndringarFonster(idb, inloggadAnvandare, "Mål info", this, malNr).setVisible(true);
        }
        else{
            this.setVisible(false);
            new MalInfoFonster(idb,malNr,inloggadAnvandare).setVisible(true);
        }
    }//GEN-LAST:event_btnTillbakaActionPerformed

    private void cbPrioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPrioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPrioActionPerformed

    private void cbPrioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbPrioItemStateChanged
        String prioritet = cbPrio.getSelectedItem().toString();
        switch(prioritet){
                case "Hög":
                    pbPrioritet.setValue(100);
                    pbPrioritet.setForeground(Color.RED);
                    break;
                case "Medel":
                    pbPrioritet.setValue(75);
                    pbPrioritet.setForeground(Color.YELLOW);
                    break;
                case "Låg":
                    pbPrioritet.setValue(25);
                    pbPrioritet.setForeground(Color.GREEN);
                    break;
            }
        osparadeAndringar = true;
        btnSpara.setEnabled(true);
        btnAterstall.setEnabled(true);
    }//GEN-LAST:event_cbPrioItemStateChanged

    private void btnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaActionPerformed
        boolean formatKorrekt = true;
        
        String namn = tpMalNamn.getText();
        String beskrivning = tpMalBeskrivning.getText();
        if(namn.isEmpty()|| beskrivning.isEmpty()){
            lblFelM.setVisible(true);
            formatKorrekt = false;
        }
        if(formatKorrekt){
            String sqlFraga = "UPDATE hallbarhetsmal "
                    + "SET namn = '" + namn + "', beskrivning = '" 
                    + beskrivning + "', prioritet = '" + cbPrio.getSelectedItem().toString() + "' "
                    + "WHERE malnummer = " + malNr;
            try{
                idb.update(sqlFraga);
                setMal();
            }
            catch(InfException ex){
                System.out.println(ex.getMessage());
            }
            
        this.setVisible(false);
        new MalInfoFonster(idb, malNr, inloggadAnvandare).setVisible(true);
        }
    }//GEN-LAST:event_btnSparaActionPerformed

    private void tpMalNamnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpMalNamnKeyTyped
        osparadeAndringar = true;
        btnSpara.setEnabled(true);
        btnAterstall.setEnabled(true);
    }//GEN-LAST:event_tpMalNamnKeyTyped

    private void tpMalBeskrivningKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpMalBeskrivningKeyTyped
        osparadeAndringar = true;
        btnSpara.setEnabled(true);
        btnAterstall.setEnabled(true);
    }//GEN-LAST:event_tpMalBeskrivningKeyTyped

    private void btnAterstallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAterstallActionPerformed
        osparadeAndringar = false;
        btnSpara.setEnabled(false);
        btnAterstall.setEnabled(false);
        
        setMal();
    }//GEN-LAST:event_btnAterstallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RedigeraMalInfoFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RedigeraMalInfoFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RedigeraMalInfoFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RedigeraMalInfoFonster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MalInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAterstall;
    private javax.swing.JButton btnSpara;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cbPrio;
    private javax.swing.JLabel lblBeskrivning;
    private javax.swing.JLabel lblFelM;
    private javax.swing.JLabel lblMalIkon;
    private javax.swing.JLabel lblPrioritet;
    private javax.swing.JProgressBar pbPrioritet;
    private javax.swing.JTextPane tpMalBeskrivning;
    private javax.swing.JTextPane tpMalNamn;
    // End of variables declaration//GEN-END:variables
}
