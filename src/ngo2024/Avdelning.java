/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo2024;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.*;
import javax.swing.table.*;

/**
 *
 * @author walle
 */
public class Avdelning extends javax.swing.JFrame {

    private InfDB idb;
    private Anvandare inloggadAnvandare;
    
    /**
     * Creates new form Avdelning
     */
    public Avdelning(InfDB idb,Anvandare inloggadAnvandare) {
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        initComponents();
        setLocationRelativeTo(null);
        displayAnstallda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        anstalldTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1020, 576));
        setPreferredSize(new java.awt.Dimension(1020, 576));

        anstalldTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Namn", "Roll"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(anstalldTable);
        if (anstalldTable.getColumnModel().getColumnCount() > 0) {
            anstalldTable.getColumnModel().getColumn(0).setResizable(false);
            anstalldTable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(362, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    private void displayAnstallda(){
        try{
            HashMap<String,String> anstalldRows = new HashMap<>();
            
            String sqlFraga = "SELECT aid FROM anstalld "
                    + "WHERE avdelning = " + inloggadAnvandare.getAvdelningsId();
            System.out.println(sqlFraga);
            ArrayList<HashMap<String,String>> anstallda = idb.fetchRows(sqlFraga);
            
            sqlFraga = "SELECT aid FROM handlaggare";
            ArrayList<String> aidHandlaggare = idb.fetchColumn(sqlFraga);
            
            sqlFraga = "SELECT aid FROM admin";
            ArrayList<String> aidAdmin = idb.fetchColumn(sqlFraga);
                       
            for(HashMap<String,String> anstalld : anstallda){
                anstalldRows.put(anstalld.get("aid"),"Anställd");
            }
            
            for(HashMap<String,String> anstalld : anstallda){
                for(String dbAid : aidHandlaggare){
                    if (dbAid.equals(anstalld.get("aid"))){
                        anstalldRows.put(anstalld.get("aid"),"Handläggare");
                    }
                } 
            }
            
            for(HashMap<String,String> anstalld : anstallda){
                for(String dbAid : aidAdmin){
                    if (dbAid.equals(anstalld.get("aid"))){
                        //anstalldRows.get()
                        anstalldRows.put(anstalld.get("aid"),"Administratör");
                    }
                } 
            }
            for(String aid : anstalldRows.keySet()){
              String  sqlFraga1 = "SELECT fornamn FROM anstalld " +
                        "WHERE aid = "+aid;
                String sqlFraga2 = "SELECT efternamn FROM anstalld " +
                        "WHERE aid = "+aid;
                String namn = idb.fetchSingle(sqlFraga1)+" "+idb.fetchSingle(sqlFraga2);
                DefaultTableModel model = (DefaultTableModel) anstalldTable.getModel();
                model.addRow(new Object[]{namn, anstalldRows.get(aid)} );
                System.out.println(namn + " " + anstalldRows.get(aid));
            }
        }catch(InfException ex){
            System.out.println(ex.getMessage());
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Avdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Avdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Avdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Avdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Avdelning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable anstalldTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
